def aa = 'UNKNOWN'
pipeline {
  agent any
  stages {
    stage('Start') {
      steps {
        sh 'printenv'
      }
    }
    stage('Compile') {
       steps {
         dir(path: 'demoapp') {
           sh 'mvn clean'
           sh 'mvn compile'
           sh 'mvn package'
         }
       }
    }   
    stage('Docker Build') {
       steps {
         sh 'docker image prune -f'
         sh 'docker build -t $Img_Space/$App_Name:latest .'
         sh 'docker tag $Img_Space/$App_Name:latest $dc_server/$Img_Space/$App_Name:$Rel_Name'
         sh 'docker tag $Img_Space/$App_Name:latest mkmbz079250.ca.dst.ibm.com/demo/ocp4demoapp:latest'
       }
    }
    stage('Push to Registry'){
       steps{
         sh "docker login mkmbz079250.ca.dst.ibm.com -u dstdev -p '$jcr_pass'"
         sh "docker push mkmbz079250.ca.dst.ibm.com/demo/ocp4demoapp"
         sh "docker logout"
       }
    }
    stage('Scan Image'){
       steps{
         sh 'echo "mkmbz079250.ca.dst.ibm.com/demo/ocp4demoapp:latest" ${WORKSPACE}/Dockerfile > anchore_images'
         sh 'cat anchore_images'
         anchore "anchore_images"
       }
    }
//    stage('Push to OCP') {
//     steps {
//        sh 'oc login $os_server:$os_port -u $os_user -p $os_pass -n $os_namespace --insecure-skip-tls-verify'
//        script{
//          octoken = sh(script: 'oc whoami -t', returnStdout: true)
//        }
//        sh "docker login $dc_server -u $dc_user -p ${octoken}"
//        sh 'docker push $dc_server/$Img_Space/$App_Name:$Rel_Name'
//        sh 'docker logout $dc_server'
//      }
//    }
//    stage('OCP_Deploy') {
//      steps {
//        dir(path: 'kbdeploy/ocp4') {
//          //sh 'oc login $os_server:$os_port -u $os_user -p $os_pass -n $os_namespace --insecure-skip-tls-verify'
//          sh 'oc delete -f deployment.yaml || true'
//          sh 'oc delete -f service.yaml || true'
//          sh 'oc delete -f ingress.yaml || true'        
//          sh 'oc create -f deployment.yaml'
//          sh 'oc create -f service.yaml'
//          sh 'oc create -f ingress.yaml'
//        }
//      }
//    }
//    stage('Logout') {
//      steps {
//        sh 'oc logout'
//      }
//    }
  }
  post { 
        always { 
            sh 'docker logout $dc_server|| true'
            sh 'oc logout || true'
        }
  }
  environment {
    scan_img = 'false'
    os_server = credentials('OCP_SERVER') //'https://api.ocp4ignite.ca.dst.ibm.com'
    os_port = '6443'
    os_user = credentials('OCP_USER')
    os_pass = credentials('OCP_PASS')
    os_namespace=credentials('OCP_NAMESPACE')
    dc_user = credentials('DC_USER')
    dc_pass = credentials('DC_PASS')
    dc_server = credentials('DC_SERVER')//'default-route-openshift-image-registry.apps.ocp4ignite.ca.dst.ibm.com'
    //pv_Docker_Reg = 'default-route-openshift-image-registry.apps.ocp4mcm.ca.dst.ibm.com'
    Img_Space = 'demo'
    App_Name = 'demoapp'
    Rel_Name = 'latest'
    jcr_pass = credentials('JCR_PASS')
  }
}
